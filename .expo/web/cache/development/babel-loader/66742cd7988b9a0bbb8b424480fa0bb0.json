{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/diogoribeiro/faculdade/p4/p4-cam/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Camera } from 'expo-camera';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.overlayCode,\n    source: require(\"./assets/code.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \" Flip \")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  camera: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  overlay: {\n    borderRadius: 1000,\n    width: 350,\n    height: 350,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"rgba(150,150,150,0.4)\"\n  },\n  overlayCode: {\n    resizeMode: 'contain',\n    width: 315\n  },\n  buttonContainer: {\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    color: \"#000\",\n    width: 60,\n    position: 'absolute',\n    padding: 15,\n    bottom: 45,\n    left: 40\n  }\n});","map":{"version":3,"sources":["/Users/diogoribeiro/faculdade/p4/p4-cam/App.js"],"names":["React","useState","useEffect","Camera","App","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestPermissionsAsync","status","styles","container","camera","overlay","overlayCode","require","buttonContainer","button","front","text","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","borderRadius","width","height","backgroundColor","resizeMode","color","position","padding","bottom","left"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity , Image} from 'react-native';\nimport { Camera } from 'expo-camera';\n\nexport default function App() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n    <View style={styles.container}>\n      <Camera style={styles.camera} type={type}>\n        <View style={styles.overlay}>\n        <Image\n        style={styles.overlayCode}\n        source={require('./assets/code.png')}\n        />\n        </View>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}>\n            <Text style={styles.text}> Flip </Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:1,\n    flexDirection: \"row\"\n  },\n  camera: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n\n  overlay: {\n    borderRadius: 1000,\n    width: 350,\n    height: 350,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"rgba(150,150,150,0.4)\",\n  },\n  overlayCode: {\n    resizeMode: 'contain',\n    width:315,\n  },\n\n\n  buttonContainer: {\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    color:  \"#000\",\n    width: 60,\n    position: 'absolute',\n    padding: 15,\n    bottom: 45,\n    left: 40,\n  },\n}); "]},"metadata":{},"sourceType":"module"}